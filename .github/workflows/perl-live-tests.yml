name: Run Perl Live Tests
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'Makefile.am'
      - 'configure.ac'
      - 'Open-ILS/examples'
      - 'Open-ILS/src'
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'Makefile.am'
      - 'configure.ac'
      - 'Open-ILS/examples'
      - 'Open-ILS/src'
  workflow_dispatch:

jobs:
  install-opensrf:
    name: Install Opensrf
    runs-on: ubuntu-24.04
    steps:
      - name: Clone OpenSRF repository
        run: git clone --branch main git://git.evergreen-ils.org/OpenSRF.git
      - name: "OpenSRF: install dependencies"
        run: sudo make -f src/extras/Makefile.install ubuntu-jammy
        working-directory: ./OpenSRF
      - name: "OpenSRF: configure and make"
        run: autoreconf -i && ./configure --prefix=/openils --sysconfdir=/openils/conf && make
        working-directory: ./OpenSRF
      - name: "OpenSRF: make install"
        run: sudo make install
        working-directory: ./OpenSRF
      - name: "OpenSRF: Create the opensrf Unix user"
        run: sudo useradd -m -s /bin/bash opensrf
      - name: "OpenSRF: Set up the opensrf Unix user environment"
        run: sudo echo "export PATH=\$PATH:/openils/bin" | sudo tee -a /home/opensrf/.bashrc
      - name: "OpenSRF: Change opensrf Unix user password"
        run: echo "opensrf:opensrf" | sudo chpasswd
      - name: "OpenSRF: Define your public and private OpenSRF domains"
        run: |
            sudo echo "127.0.0.1 private.localhost public.localhost" | sudo tee -a /etc/hosts
      - name: "OpenSRF: Adjust the system dynamic library path"
        run: "sudo echo /openils/lib | sudo tee -a /etc/ld.so.conf.d/opensrf.conf && sudo ldconfig"
      - name: "OpenSRF: Update the OpenSRF configuration files"
        run: cd /openils/conf && sudo cp opensrf_core.xml.example opensrf_core.xml && sudo cp opensrf.xml.example opensrf.xml && sudo cp redis-accounts.txt.example redis-accounts.txt

      - uses: actions/checkout@v4
        with:
          path: Evergreen
      - name: "Evergreen: install dependencies"
        run: sudo make -f Open-ILS/src/extras/Makefile.install ubuntu-jammy && sudo make -f Open-ILS/src/extras/Makefile.install ubuntu-jammy-developer
        working-directory: ./Evergreen
      - name: "Evergreen: configure and make"
        run: autoreconf -i && PATH=/openils/bin:$PATH ./configure --prefix=/openils --sysconfdir=/openils/conf && make
        working-directory: ./Evergreen
      - name: "Evergreen: make install"
        run: sudo make install
        working-directory: ./Evergreen
      - name: "Evergreen: change ownership of the Evergreen files"
        run: sudo chown -R opensrf:opensrf /openils
      - name: "Evergreen: Run ldconfig"
        run: "sudo ldconfig"
      - name: "Evergreen: Configure OpenSRF for the Evergreen application"
        run: "sudo cp -b /openils/conf/opensrf_core.xml.example /openils/conf/opensrf_core.xml && sudo cp -b /openils/conf/opensrf.xml.example /openils/conf/opensrf.xml"
      - name: "Evergreen: Set up the PostgreSQL server"
        run: |
          sudo make -f Open-ILS/src/extras/Makefile.install postgres-server-ubuntu-noble-16
          psql -U postgres --comand="CREATE USER evergreen PASSWORD 'password'" --command="\du"
          createdb --owner=evergreen evergreen
        working-directory: ./Evergreen
      - name: "Evergreen: Load the Concerto Data set"
        run: "perl Open-ILS/src/support-scripts/eg_db_config --update-config --service all --create-database --create-schema --create-offline --user evergreen --password password --admin-user admin --admin-pass demo123"
        working-directory: ./Evergreen
      - name: "Evergreen: start Evergreen"
        run: sudo service memcached start && sudo -i -u opensrf osrf_control -l --start-all && sudo -i -u opensrf autogen.sh
      - name: "Evergreen: run live tests"
        run: make livecheck
        working-directory: ./Evergreen/Open-ILS/src/perlmods
